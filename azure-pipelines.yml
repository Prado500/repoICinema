# azure-pipelines.yml
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  webAppName: 'icinema-app-demo'

steps:
- checkout: self

# PASO 1: Actualizar versi√≥n para evidencia
- script: |
    echo "üîÑ Modificando versi√≥n para evidenciar cambios CI/CD..."
    python update_version.py $(Build.BuildId)
  displayName: 'Update Version for Evidence'

# PASO 2: Instalar dependencias
- script: |
    echo "üì¶ Instalando dependencias Python..."
    pip install -r requirements.txt
  displayName: 'Install Python Dependencies'

# PASO 3: Copiar archivos AL DIRECTORIO DE ARTIFACTS
- task: CopyFiles@2
  displayName: 'Copy Files to Staging'
  inputs:
    Contents: |
      **/*
      !.git/**
      !.github/**
      !.venv/**
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

# PASO 4: Crear ZIP (esto es lo que Azure Web App necesita)
- task: ArchiveFiles@2
  displayName: 'Create ZIP Package'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true

# PASO 5: Publicar artifact (ESTE ES EL QUE USAR√Å EL CD)
- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.zip'  # ‚ö†Ô∏è PUBLICAR EL ZIP, NO LA CARPETA
    ArtifactName: 'drop'
    publishLocation: 'Container'

# PASO 6: Evidencia
- script: |
    echo "üéâ CI COMPLETADO EXITOSAMENTE"
    echo "üì¶ Build ID: $(Build.BuildId)"
    echo "üìÅ Artifact: app.zip"
    echo "‚úÖ Listo para despliegue en CD"
  displayName: 'CI Success'